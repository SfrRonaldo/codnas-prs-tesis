{"version":3,"sources":["components/scroll-top/index.js","components/navbar/index.js","components/item/index.js","components/cards/index.js","context/prs/prsContext.js","components/button/index.js","components/autocomplete/index.js","components/form/index.js","components/search/index.js","pages/home/index.js","components/item-tutorial-1/index.js","components/item-tutorial-2/index.js","components/item-tutorial-3/index.js","components/item-tutorial-4/index.js","components/item-tutorial-4-1/index.js","components/item-tutorial-4-2/index.js","components/cards-tutorial/index.js","pages/tutorial/index.js","components/item-detail-1/index.js","components/item-detail-2/index.js","components/item-detail-3/index.js","components/cards-detail/index.js","components/spinner/index.js","pages/detail/index.js","components/item-estimate-1/index.js","components/item-estimate-2/index.js","components/item-estimate-3/index.js","components/cards-estimate/index.js","pages/estimate/index.js","pages/not-found/index.js","components/footer/index.js","types/index.js","context/prs/prsReducer.js","context/prs/prsState.js","App.js","reportWebVitals.js","index.js"],"names":["withRouter","history","useEffect","unlisten","listen","window","scrollTo","Navbar","useState","click","setClick","closeMobileMenu","className","to","onClick","Item","props","href","path","target","rel","data-category","label","alt","src","style","fontWeight","text","Cards","textAlign","prsContext","createContext","STYLES","SIZES","Button","children","type","buttonStyle","buttonSize","width","checkButtonStyle","includes","checkButtonSize","PDBSelect","handleInputChange","onKeyPress","prs","useContext","Autocomplete","id","options","getOptionLabel","option","pdb_id","size","onInputChange","renderInput","params","TextField","variant","Alert","elevation","Form","PrsContext","setCurrentPr","clearPr","pdbChain","lower","higher","pr","setPr","open","setOpen","msgError","setMsgError","useHistory","handleChange","e","name","value","is_valid","parseInt","handleClick","key","push","handleClose","_e","reason","Grid","container","justify","spacing","item","lg","md","xs","newInputValue","placeholder","fullWidth","onChange","Snackbar","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","severity","Search","title","color","Home","getPrs","bgImage","bgImageAlt","bgImageStyle","height","ItemTutorial1","ItemTutorial2","ItemTutorial3","ItemTutorial4","margin","ItemTutorial41","ItemTutorial42","CardsTutorial","Tutorial","ItemEstimate1","infoGeneral","cluster","nombre_proteina","titulo","organismo","long_secuencia","clasificacion","num_regiones","TableContainer","component","Paper","Table","aria-label","TableBody","TableRow","TableCell","scope","ItemDetail2","infoEstructural","map","marginBottom","region","arial-label","num_conformaciones","rmsd_min","rmsd_max","rmsd_avg","useStyles1","makeStyles","theme","root","flexShrink","marginLeft","TablePaginationActions","classes","useTheme","count","page","rowsPerPage","onChangePage","IconButton","event","disabled","direction","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","ItemDetail3","conformaciones","contextPrs","setPage","setRowsPerPage","array","setArray","repeats","i","data","forEach","conf","obj","num_region","handleChangePage","newPage","handleChangeRowsPerPage","TableHead","slice","r","conformero_1","conformero_2","lim_inf_2","lim_sup_2","sec_similitud","rmsd","lim_inf_1","lim_sup_1","TablePagination","rowsPerPageOptions","length","SelectProps","inputProps","native","onChangeRowsPerPage","ActionsComponent","labelRowsPerPage","CardsDetail","Spinner","Detail","loading","getDetailInfo","ItemEsimate1","region_repetida","ItemEstimate2","ItemEstimate3","conformero","lim_inf","lim_sup","CardsEstimate","Estimate","getEstimateInfo","NotFound","Footer","GET_PRS","SET_DETAIL_INFO","SET_ESTIMATE_INFO","SET_CURRENT_PR","CLEAR_PR","state","action","payload","res1","res2","res3","localStorage","setItem","removeItem","PrsState","initialState","getItem","useReducer","prsReducer","dispatch","a","axios","get","result","urlInfoGeneral","urlInfoEstructural","urlConformaciones","Promise","all","setTimeout","InfoGeneral","InfoEstructural","Conformacion","console","log","Provider","getPr","low","high","App","exact","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Fragment","document","getElementById"],"mappings":"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","file":"static/js/main.6c69e8fe.chunk.js","sourcesContent":["import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = ({ history }) => {\r\n  useEffect(() => {\r\n    const unlisten = history.listen(() => {\r\n      window.scrollTo(0, 0);\r\n    });\r\n    return () => {\r\n      unlisten();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./index.css\";\r\n\r\nconst Navbar = () => {\r\n  const [click, setClick] = useState(false);\r\n\r\n  const handleClick = () => setClick(!click);\r\n  const closeMobileMenu = () => setClick(false);\r\n\r\n  return (\r\n    <>\r\n      <nav className=\"navbar\">\r\n        <div className=\"navbar-container\">\r\n          <Link to=\"/\" className=\"navbar-logo\" onClick={closeMobileMenu}>\r\n            CoDNaS-PRs\r\n          </Link>\r\n          <div className=\"menu-icon\" onClick={handleClick}>\r\n            <i className={click ? \"fas fa-times\" : \"fas fa-bars\"} />\r\n          </div>\r\n          <ul className={click ? \"nav-menu active\" : \"nav-menu\"}>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-links\" onClick={closeMobileMenu}>\r\n                Inicio\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                to=\"/tutorial\"\r\n                className=\"nav-links\"\r\n                onClick={closeMobileMenu}\r\n              >\r\n                Tutorial\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { Fragment } from \"react\";\r\n\r\nconst Item = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <a\r\n          className=\"cards__item__link\"\r\n          href={props.path}\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          <figure className=\"cards__item__pic-wrap\" data-category={props.label}>\r\n            <img className=\"cards__item__img\" alt={props.alt} src={props.src} />\r\n          </figure>\r\n          <div className=\"cards__item__info\">\r\n            <h5 className=\"cards__item__text\" style={{ fontWeight: \"lighter\" }}>\r\n              {props.text}\r\n            </h5>\r\n          </div>\r\n        </a>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport Item from \"../item\";\r\n\r\nfunction Cards() {\r\n  return (\r\n    <div className=\"cards\">\r\n      <h2 className=\"cards__item__subtitle\" style={{ textAlign: \"center\" }}>\r\n        Con la colaboración de las universidades\r\n      </h2>\r\n      <div className=\"cards__container\">\r\n        <div className=\"cards__wrapper\">\r\n          <ul className=\"cards__items\">\r\n            <Item\r\n              src=\"/images/img-pucp.jpg\"\r\n              text=\"La Pontificia Universidad Católica del Perú es una universidad privada en Lima, Perú.\"\r\n              label=\"Pontificia Universidad Católica del Perú\"\r\n              path=\"https://www.pucp.edu.pe\"\r\n              alt=\"PUCP\"\r\n            />\r\n            <Item\r\n              src=\"/images/img-unq.png\"\r\n              text=\"La Universidad Nacional de Quilmes es una universidad nacional argentina y la más importante de la ciudad de Quilmes.\"\r\n              label=\"Universidad Nacional de Quilmes\"\r\n              path=\"http://www.unq.edu.ar\"\r\n              alt=\"UNQ\"\r\n            />\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import { createContext } from \"react\";\r\n\r\nconst prsContext = createContext();\r\n\r\nexport default prsContext;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst STYLES = [\"btn--primary\", \"btn--secondary\", \"btn--outline\", \"btn--test\"];\r\n\r\nconst SIZES = [\"btn--medium\", \"btn--large\"];\r\n\r\nconst Button = ({\r\n  children,\r\n  type,\r\n  onClick,\r\n  buttonStyle,\r\n  buttonSize,\r\n  width,\r\n  to = \"#!\",\r\n}) => {\r\n  const checkButtonStyle = STYLES.includes(buttonStyle)\r\n    ? buttonStyle\r\n    : STYLES[0];\r\n\r\n  const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0];\r\n\r\n  if (to === \"\")\r\n    return (\r\n      <button\r\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n        onClick={onClick}\r\n        type={type}\r\n        style={{ width: width }}\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n\r\n  return (\r\n    <Link to={to} className=\"btn-mobile\">\r\n      <button\r\n        className={`btn ${checkButtonStyle} ${checkButtonSize}`}\r\n        onClick={onClick}\r\n        type={type}\r\n        style={{ width: width }}\r\n      >\r\n        {children}\r\n      </button>\r\n    </Link>\r\n  );\r\n};\r\nexport default Button;\r\n","import React, { useContext } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport prsContext from \"../../context/prs/prsContext\";\r\n\r\nconst PDBSelect = ({ handleInputChange, onKeyPress }) => {\r\n  const contextPrs = useContext(prsContext);\r\n\r\n  const { prs } = contextPrs;\r\n\r\n  return (\r\n    <Autocomplete\r\n      id=\"pdbChain\"\r\n      options={prs}\r\n      getOptionLabel={(option) => option.pdb_id}\r\n      size=\"small\"\r\n      onInputChange={handleInputChange}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          label=\"Proteína repetida\"\r\n          variant=\"outlined\"\r\n          style={{ width: \"100%\" }}\r\n          onKeyPress={onKeyPress}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PDBSelect;\r\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport { Grid, TextField, Snackbar } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MuiAlert from \"@material-ui/lab/Alert\";\r\nimport PrsContext from \"../../context/prs/prsContext\";\r\nimport Button from \"../button\";\r\nimport PDBSelect from \"../autocomplete\";\r\nimport \"./index.css\";\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nconst Form = () => {\r\n  // Obtener el state del context\r\n  const prsContext = useContext(PrsContext);\r\n\r\n  const { setCurrentPr, clearPr } = prsContext;\r\n\r\n  const [pr, setPr] = useState({\r\n    pdbChain: \"\",\r\n    lower: \"\",\r\n    higher: \"\",\r\n  });\r\n  const [open, setOpen] = useState(false);\r\n  const [msgError, setMsgError] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    clearPr();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const { pdbChain, lower, higher } = pr;\r\n\r\n  const handleChange = (e) => {\r\n    setPr({ ...pr, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleInputChange = (_e, newInputValue) => {\r\n    setPr({ ...pr, pdbChain: newInputValue });\r\n  };\r\n\r\n  const is_valid = () => {\r\n    // En el caso de no rellenar el pdb chain\r\n    if ((lower !== \"\" || higher !== \"\") && pdbChain === \"\") {\r\n      setMsgError(\"Falta llenar el campo de la proteína repetida.\");\r\n      handleClick();\r\n      return false;\r\n    }\r\n    // Verificar que lower > 0 y higher > 0\r\n    if (parseInt(lower) <= 0 || parseInt(higher) <= 0) {\r\n      setMsgError(\r\n        \"El límite inferior y el límite superior de la región de repetición (Inf. y Sup., respectivamente) tiene que ser valores mayores que 0.\"\r\n      );\r\n      handleClick();\r\n      return false;\r\n    }\r\n    // Verificar que lower > higher\r\n    if (parseInt(lower) >= parseInt(higher)) {\r\n      setMsgError(\r\n        \"El límite inferior de la región de repetición (Inf.) tienen que ser mayor al límite superior de la región de repetición (Sup.).\"\r\n      );\r\n      handleClick();\r\n      return false;\r\n    }\r\n    // Verificar que la región de repetición esté dentro del alcance\r\n    return true;\r\n  };\r\n\r\n  const onKeyPress = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      // En el caso de no rellenar formulario\r\n      if (pdbChain === \"\" && lower === \"\" && higher === \"\") {\r\n        setMsgError(\r\n          \"Falta llenar el campo de la proteína repetida con o sin los campos de la región de repetición (Inf. y Sup.).\"\r\n        );\r\n        handleClick();\r\n        return;\r\n      }\r\n      // En el caso de solo rellenar el pdbChain\r\n      if (pdbChain !== \"\" && lower === \"\" && higher === \"\") {\r\n        setCurrentPr(pr);\r\n        setMsgError(\"\");\r\n        history.push(\"/detail\");\r\n        return;\r\n      }\r\n      // En el caso de rellenar el pdbChain y uno de los limites de la region de repeticion\r\n      if (pdbChain !== \"\" && (lower === \"\" || higher === \"\")) {\r\n        setMsgError(\r\n          \"Si gusta estimar precisa de llenar los campos de la región de repetición (Inf. y Sup.).\"\r\n        );\r\n        handleClick();\r\n        return;\r\n      }\r\n      // En el caso de no rellenar el pdb chain\r\n      if ((lower !== \"\" || higher !== \"\") && pdbChain === \"\") {\r\n        setMsgError(\"Falta llenar el campo de la proteína repetida.\");\r\n        handleClick();\r\n        return;\r\n      }\r\n      if (is_valid()) {\r\n        setCurrentPr(pr);\r\n        setMsgError(\"\");\r\n        history.push(\"/estimate\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (_e, reason) => {\r\n    if (reason === \"clickaway\") return;\r\n    setOpen(false);\r\n  };\r\n\r\n  const onClickDetail = (_e) => {\r\n    if (pdbChain === \"\") {\r\n      setMsgError(\"Falta llenar el campo de la proteína repetida.\");\r\n      handleClick();\r\n      return;\r\n    }\r\n    setCurrentPr(pr);\r\n    setMsgError(\"\");\r\n    history.push(\"/detail\");\r\n  };\r\n\r\n  const onClickEstimate = (_e) => {\r\n    if (pdbChain === \"\" && lower === \"\" && higher === \"\") {\r\n      setMsgError(\r\n        \"Falta llenar el campo de la proteína repetida con los campos de la región de repetición (Inf. y Sup.).\"\r\n      );\r\n      handleClick();\r\n      return;\r\n    }\r\n    // En el caso de rellenar el pdbChain y uno de los limites de la region de repeticion\r\n    if (pdbChain !== \"\" && (lower === \"\" || higher === \"\")) {\r\n      setMsgError(\r\n        \"Falta llenar los campos de la región de repetición (Inf. y Sup.).\"\r\n      );\r\n      handleClick();\r\n      return;\r\n    }\r\n    // En el caso de no rellenar el pdb chain\r\n    if ((lower !== \"\" || higher !== \"\") && pdbChain === \"\") {\r\n      setMsgError(\"Falta llenar el campo de la proteína repetida.\");\r\n      handleClick();\r\n      return;\r\n    }\r\n    if (is_valid()) {\r\n      setCurrentPr(pr);\r\n      setMsgError(\"\");\r\n      history.push(\"/estimate\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"form-content\">\r\n        <div className=\"form-control\">\r\n          <Grid container justify=\"center\" spacing={3}>\r\n            <Grid item lg={12} md={12} xs={12}>\r\n              <PDBSelect\r\n                handleInputChange={handleInputChange}\r\n                onKeyPress={onKeyPress}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <Grid container justify=\"center\" spacing={3}>\r\n            <Grid item xs={6} lg={6} md={6}>\r\n              <TextField\r\n                id=\"lower\"\r\n                name=\"lower\"\r\n                label=\"Inf.\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"number\"\r\n                placeholder=\"2\"\r\n                fullWidth\r\n                onChange={handleChange}\r\n                onKeyPress={onKeyPress}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6} lg={6} md={6}>\r\n              <TextField\r\n                id=\"higher\"\r\n                name=\"higher\"\r\n                label=\"Sup.\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                type=\"number\"\r\n                placeholder=\"79\"\r\n                fullWidth\r\n                onChange={handleChange}\r\n                onKeyPress={onKeyPress}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n        <div className=\"form-control\">\r\n          <Grid container justify=\"center\" spacing={3}>\r\n            <Grid item xs={12} lg={6} md={6}>\r\n              <Button\r\n                to={\"\"}\r\n                onClick={onClickEstimate}\r\n                buttonStyle=\"btn--primary\"\r\n              >\r\n                Estimar\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} lg={6} md={6}>\r\n              <Button\r\n                to={\"\"}\r\n                onClick={onClickDetail}\r\n                buttonStyle=\"btn--primary\"\r\n              >\r\n                Buscar\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n      <Snackbar\r\n        open={open}\r\n        autoHideDuration={3000}\r\n        onClose={handleClose}\r\n        style={{ textAlign: \"center\" }}\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\r\n      >\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {msgError}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"../form\";\r\nimport Button from \"../button\";\r\nimport TutorialIcon from \"@material-ui/icons/MenuBook\";\r\n\r\nconst Search = ({ title, text, color }) => {\r\n  return (\r\n    <div className=\"cards\">\r\n      <div className=\"cards__container\">\r\n        <div className=\"cards__wrapper\">\r\n          <ul className=\"cards__items\">\r\n            <li className=\"cards__item\">\r\n              <div className=\"cards__item__paper\">\r\n                <div className=\"cards__item__title\">\r\n                  <span style={{ fontWeight: \"bold\" }}>{title}</span>\r\n                </div>\r\n                <Form />\r\n                <div className={`cards__item__body ${color}`}>\r\n                  <span>{text}</span>\r\n                </div>\r\n                <div className={`cards__item__btn`}>\r\n                  <Button to=\"/tutorial\" buttonStyle=\"btn--outline\" width=\"40%\">\r\n                    <TutorialIcon className=\"icon__tutorial\" />\r\n                    <span>¿Cómo evaluar?</span>\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Parallax } from \"react-parallax\";\r\nimport Cards from \"../../components/cards\";\r\nimport Search from \"../../components/search\";\r\nimport prsContext from \"../../context/prs/prsContext\";\r\n\r\nconst Home = () => {\r\n  const contextPrs = useContext(prsContext);\r\n\r\n  const { getPrs } = contextPrs;\r\n\r\n  useEffect(() => {\r\n    getPrs();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <section>\r\n        <Parallax\r\n          bgImage=\"/images/img-2.jpg\"\r\n          bgImageAlt=\"prs\"\r\n          bgImageStyle={{ height: \"100%\", width: \"100%\" }}\r\n        >\r\n          <Search\r\n            title=\"Herramienta para el análisis de diversidad conformacional en estructuras de proteínas repetidas\"\r\n            text=\"Ingresar una cadena de proteína repetida para buscar su información de diversidad conformacional en la base de datos o estimar su diversidad conformacional agregando la región de repetición de la misma\"\r\n            color=\"primary\"\r\n          />\r\n        </Parallax>\r\n      </section>\r\n      <section>\r\n        <Cards />\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Fragment } from \"react\";\r\nconst ItemTutorial1 = () => {\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <div className=\"cards__item__link\">\r\n          <div className=\"cards__item__info\">\r\n            <h1 className=\"cards__item__title\">Tutorial</h1>\r\n            <br />\r\n            <h2 className=\"cards__item__subtitle\">\r\n              Resultados de la búsqueda y estimación de diversidad\r\n              conformacional de la cadena de proteína repetida\r\n            </h2>\r\n            <br />\r\n            <h5 className=\"cards__item__text\" style={{ fontWeight: \"lighter\" }}>\r\n              La presente herramienta permite buscar en la base de datos\r\n              CoDNaS-PRs los resultados obtenidos empleando el método que\r\n              analiza la diversidad conformacional de las proteínas repetidas en\r\n              base al dominio repetitivo (regiones repetidas) y en caso no se\r\n              encuentre en la misma, se tiene la opción de estimar la diversidad\r\n              conformacional de la proteína repetida que se ingrese.\r\n            </h5>\r\n          </div>\r\n          <img\r\n            alt=\"\"\r\n            src=\"/images/img-tutorial-1.png\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </div>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemTutorial1;\r\n","import React, { Fragment } from \"react\";\r\nconst ItemTutorial2 = () => {\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <div className=\"cards__item__link\">\r\n          <div className=\"cards__item__info\">\r\n            <h2 className=\"cards__item__subtitle\">\r\n              Buscar información de diversidad conformacional de la proteína\r\n              repetida\r\n            </h2>\r\n            <br />\r\n            <h5 className=\"cards__item__text\" style={{ fontWeight: \"lighter\" }}>\r\n              Para acceder u obtener información de la diversidad conformacional\r\n              de alguna proteína repetida, existe en la página principal la\r\n              opción{\" \"}\r\n              <i>\r\n                <b>Buscar</b>\r\n              </i>\r\n              , la cual permite extraer de la base de datos CoDNaS-PRs la\r\n              información de diversidad conformacional (información general,\r\n              información estructural y conformaciones) de la proteína repetida\r\n              que se requiera. Para esto, los usuarios pueden buscar únicamente\r\n              por cadena de proteína repetida. Asimismo, en caso el usuario no\r\n              recuerde la cadena de proteína repetida, la presente herramienta\r\n              le otorgará un autocompletado. Además, la opción{\" \"}\r\n              <i>\r\n                <b> Buscar </b>\r\n              </i>\r\n              estará habilitado siempre y cuando se haya ingresado la cadena de\r\n              proteína repetida, sino estará deshabilitado. Con lo mencionado\r\n              previamente, facilitará al usuario la búsqueda de información de\r\n              diversidad conformacional de la proteína repetida que quisiera\r\n              conocer.\r\n            </h5>\r\n          </div>\r\n          <img\r\n            alt=\"\"\r\n            src=\"/images/img-tutorial-2.png\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </div>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemTutorial2;\r\n","import React, { Fragment } from \"react\";\r\nconst ItemTutorial3 = () => {\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <div className=\"cards__item__link\">\r\n          <div className=\"cards__item__info\">\r\n            <h2 className=\"cards__item__subtitle\">\r\n              Estimar la diversidad conformacional de la proteína repetida\r\n            </h2>\r\n            <br />\r\n            <h5 className=\"cards__item__text\" style={{ fontWeight: \"lighter\" }}>\r\n              Para estimar la diversidad conformacional de alguna proteína\r\n              repetida existe en la página principal la opción\r\n              <i>\r\n                <b> Estimar</b>\r\n              </i>\r\n              , la cual permite estimar la diversidad conformacional de la\r\n              proteína repetida que se requiera y obtener los resultados\r\n              correspondientes (información general, información estructural y\r\n              conformaciones). Para esto, los usuarios pueden estimar ingresando\r\n              la cadena de proteína repetida y la región de repetición, la cual\r\n              tiene un límite inferior y un límite superior. Asimismo, en caso\r\n              el usuario no recuerde la cadena de proteína repetida, la presente\r\n              herramienta le otorgará un autocompletado. Además, la opción\r\n              <i>\r\n                <b> Estimar </b>\r\n              </i>\r\n              estará habilitado siempre y cuando se haya ingresado la cadena de\r\n              proteína repetida y la región de repetición, sino estará\r\n              deshabilitado. Con lo mencionado previamente, facilitará al\r\n              usuario estimar la diversidad conformacional de la proteína\r\n              repetida que quisiera evaluar.\r\n            </h5>\r\n          </div>\r\n          <img\r\n            alt=\"\"\r\n            src=\"/images/img-tutorial-3.png\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </div>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemTutorial3;\r\n","import React, { Fragment } from \"react\";\r\nconst ItemTutorial4 = () => {\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <div className=\"cards__item__link\">\r\n          <div className=\"cards__item__info\">\r\n            <h2 className=\"cards__item__subtitle\">\r\n              Resultados de la búsqueda y estimación de diversidad\r\n              conformacional de la cadena de proteína repetida\r\n            </h2>\r\n            <br />\r\n            <h5 className=\"cards__item__text\" style={{ fontWeight: \"lighter\" }}>\r\n              Una vez presionado el botón\r\n              <i>\r\n                <b> Buscar</b>\r\n              </i>\r\n              , se le redireccionará al usuario a una página que detalla los\r\n              datos recopilados de lá búsqueda en la base de datos CoDNaS-PRs de\r\n              la información de diversidad conformacional de la cadena de\r\n              proteína repetida insertada.\r\n            </h5>\r\n            <br />\r\n            <h2 className=\"cards__item__subtitle\">\r\n              Sección 1: Información General\r\n            </h2>\r\n            <br />\r\n            <h5 className=\"cards__item__text\" style={{ fontWeight: \"lighter\" }}>\r\n              La información general sobre la proteína repetida se presenta en\r\n              la parte superior de la página.\r\n            </h5>\r\n            <ul\r\n              className=\"cards__item__text\"\r\n              style={{ fontWeight: \"lighter\", margin: \"2vh\" }}\r\n            >\r\n              <li>\r\n                <b>Nombre de la proteína repetida: </b>Nombre representativo de\r\n                la proteína extraída de RCSB PDB.\r\n              </li>\r\n              <li>\r\n                <b>Título: </b>Título que representa a la proteína\r\n              </li>\r\n              <li>\r\n                <b>Organismo: </b> Organismo a la que pertenece la proteína\r\n                repetida.\r\n              </li>\r\n              <li>\r\n                <b>Longitud de secuencia: </b> Cantidad de aminoácidos de la\r\n                proteína repetida.\r\n              </li>\r\n              <li>\r\n                <b>Clasificación: </b>Tipo de proteína clasificado por RCSB PDB.\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <img\r\n            alt=\"\"\r\n            src=\"/images/img-tutorial-4.png\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </div>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemTutorial4;\r\n","import React, { Fragment } from \"react\";\r\nconst ItemTutorial41 = () => {\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <div className=\"cards__item__link\">\r\n          <div className=\"cards__item__info\">\r\n            <h2 className=\"cards__item__subtitle\">\r\n              Sección 2: Información Estructural\r\n            </h2>\r\n            <br />\r\n            <h5 className=\"cards__item__text\" style={{ fontWeight: \"lighter\" }}>\r\n              La sección Información Estructural proporciona datos estructurales\r\n              comparativos entre todas las conformaciones de la proteína\r\n              repetida incluyendo la misma. Entre estos datos se tiene al número\r\n              de conformaciones, el cual muestra la evidencia disponible sobre\r\n              la diversidad conformacional de la proteína repetida. Además, se\r\n              muestra el RMSD mínimo, máximo y promedio determinado por el\r\n              software Mammoth. Estos valores proporcionan las mediciones\r\n              centrales de la diversidad conformacional.\r\n            </h5>\r\n          </div>\r\n          <img\r\n            alt=\"\"\r\n            src=\"/images/img-tutorial-5.png\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </div>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemTutorial41;\r\n","import React, { Fragment } from \"react\";\r\nconst ItemTutorial42 = () => {\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <div className=\"cards__item__link\">\r\n          <div className=\"cards__item__info\">\r\n            <h2 className=\"cards__item__subtitle\">Sección 3: Conformaciones</h2>\r\n            <br />\r\n            <h5 className=\"cards__item__text\" style={{ fontWeight: \"lighter\" }}>\r\n              La presente sección muestra las diversas conformaciones que la\r\n              proteína repetida tiene. Asimismo, se presenta para cada\r\n              conformación la región repetida a través del límite inferior y\r\n              límite superior, la secuencia de similitud expresado en un valor\r\n              numérico y la diferencia estructural entre la proteína repetida y\r\n              la conformación expresada por la medida estadística RMSD.\r\n            </h5>\r\n          </div>\r\n          <img\r\n            alt=\"\"\r\n            src=\"/images/img-tutorial-6.png\"\r\n            style={{ width: \"100%\" }}\r\n          />\r\n        </div>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemTutorial42;\r\n","import React, { Fragment } from \"react\";\r\nimport ItemTutorial1 from \"../item-tutorial-1\";\r\nimport ItemTutorial2 from \"../item-tutorial-2/index\";\r\nimport ItemTutorial3 from \"../item-tutorial-3\";\r\nimport ItemTutorial4 from \"../item-tutorial-4\";\r\nimport ItemTutorial41 from \"../item-tutorial-4-1\";\r\nimport ItemTutorial42 from \"../item-tutorial-4-2\";\r\n\r\nconst CardsTutorial = () => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"cards\">\r\n        <div className=\"cards__container__tutorial\">\r\n          <div className=\"cards__wrapper\">\r\n            <ul className=\"cards__items\">\r\n              <ItemTutorial1 />\r\n            </ul>\r\n            <ul className=\"cards__items\">\r\n              <ItemTutorial2 />\r\n            </ul>\r\n            <ul className=\"cards__items\">\r\n              <ItemTutorial3 />\r\n            </ul>\r\n            <ul className=\"cards__items\">\r\n              <ItemTutorial4 />\r\n            </ul>\r\n            <ul className=\"cards__items\">\r\n              <ItemTutorial41 />\r\n            </ul>\r\n            <ul className=\"cards__items\">\r\n              <ItemTutorial42 />\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CardsTutorial;\r\n","import React, { Fragment } from \"react\";\r\nimport CardsTutorial from \"../../components/cards-tutorial\";\r\n\r\nconst Tutorial = () => {\r\n  return (\r\n    <Fragment>\r\n      <CardsTutorial />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Tutorial;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst ItemEstimate1 = ({ infoGeneral }) => {\r\n  const {\r\n    pdb_id,\r\n    cluster,\r\n    nombre_proteina,\r\n    titulo,\r\n    organismo,\r\n    long_secuencia,\r\n    clasificacion,\r\n    num_regiones,\r\n  } = infoGeneral;\r\n\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <div className=\"cards__item__link\">\r\n          <div className=\"cards__item__info\">\r\n            <h1 className=\"cards__item__title\">{pdb_id}</h1>\r\n            <br />\r\n            <h2 className=\"cards__item__subtitle\">Información General</h2>\r\n            <br />\r\n            <TableContainer component={Paper}>\r\n              <Table className=\"table__detail\" aria-label=\"simple data\">\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      Nombre de la proteína repetida:\r\n                    </TableCell>\r\n                    <TableCell>{nombre_proteina}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      Título:\r\n                    </TableCell>\r\n                    <TableCell>{titulo}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      Organismo\r\n                    </TableCell>\r\n                    <TableCell>{organismo}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      Longitud de secuencia:\r\n                    </TableCell>\r\n                    <TableCell>{long_secuencia}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      Clasificación:\r\n                    </TableCell>\r\n                    <TableCell>{clasificacion}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      Cluster:\r\n                    </TableCell>\r\n                    <TableCell>{cluster}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      Regiones de repetición:\r\n                    </TableCell>\r\n                    <TableCell>{num_regiones}</TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemEstimate1;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst ItemDetail2 = ({ infoEstructural }) => {\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <div className=\"cards__item__link\">\r\n          <div className=\"cards__item__info\">\r\n            <h2 className=\"cards__item__subtitle\">Información Estructural</h2>\r\n            <br />\r\n            {infoEstructural.map((item) => (\r\n              <div\r\n                key={item.region}\r\n                style={{ color: \"#252e48\", marginBottom: \"2vh\" }}\r\n              >\r\n                <h3 style={{ marginBottom: \"2vh\" }}>Región {item.region}</h3>\r\n                <TableContainer component={Paper}>\r\n                  <Table className=\"table__detail\" arial-label=\"simple data\">\r\n                    <TableBody>\r\n                      <TableRow>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          style={{ fontWeight: \"bold\" }}\r\n                        >\r\n                          #Conformaciones:\r\n                        </TableCell>\r\n                        <TableCell>{item.num_conformaciones}</TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          style={{ fontWeight: \"bold\" }}\r\n                        >\r\n                          RMSD Mínimo:\r\n                        </TableCell>\r\n                        <TableCell>{item.rmsd_min}</TableCell>\r\n                      </TableRow>\r\n                      <TableRow>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          style={{ fontWeight: \"bold\" }}\r\n                        >\r\n                          RMSD Máximo:\r\n                        </TableCell>\r\n                        <TableCell>{item.rmsd_max}</TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          style={{ fontWeight: \"bold\" }}\r\n                        >\r\n                          RMSD Promedio:\r\n                        </TableCell>\r\n                        <TableCell>{item.rmsd_avg}</TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemDetail2;\r\n","import React, { Fragment, useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport prsContext from \"../../context/prs/prsContext\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ItemDetail3 = ({ conformaciones }) => {\r\n  const contextPrs = useContext(prsContext);\r\n  const { pr, infoGeneral } = contextPrs;\r\n\r\n  const { num_regiones } = infoGeneral;\r\n\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [array, setArray] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let repeats = [];\r\n    for (let i = 1; i <= num_regiones; i++) {\r\n      let data = [];\r\n      conformaciones.forEach((conf) => {\r\n        if (conf.region === i) data.push(conf);\r\n      });\r\n      let obj = { num_region: i, data: data };\r\n      repeats.push(obj);\r\n    }\r\n    setArray(repeats);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <div className=\"cards__item__link\">\r\n          <div className=\"cards__item__info\">\r\n            <h2 className=\"cards__item__subtitle\">Conformaciones</h2>\r\n            <br />\r\n            {array.map((item) => (\r\n              <div\r\n                key={item.num_region}\r\n                style={{ color: \"#252e48\", marginBottom: \"2vh\" }}\r\n              >\r\n                <h3 style={{ marginBottom: \"2vh\" }}>\r\n                  Región {item.num_region}\r\n                </h3>\r\n                <TableContainer component={Paper}>\r\n                  <Table\r\n                    className=\"table__detail\"\r\n                    size=\"small\"\r\n                    aria-label=\"simple data\"\r\n                  >\r\n                    <TableHead>\r\n                      <TableRow>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          className=\"table__cell\"\r\n                        >\r\n                          PDB ID\r\n                        </TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          className=\"table__cell\"\r\n                        >\r\n                          LIMITE INFERIOR\r\n                        </TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          className=\"table__cell\"\r\n                        >\r\n                          LIMITE SUPERIOR\r\n                        </TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          className=\"table__cell\"\r\n                        >\r\n                          SEC. SIMILITUD\r\n                        </TableCell>\r\n                        <TableCell\r\n                          component=\"th\"\r\n                          scope=\"row\"\r\n                          className=\"table__cell\"\r\n                        >\r\n                          RMSD\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {item.data\r\n                        .slice(\r\n                          page * rowsPerPage,\r\n                          page * rowsPerPage + rowsPerPage\r\n                        )\r\n                        .map((r, id) => (\r\n                          <TableRow key={id}>\r\n                            {r.conformero_1 === pr ? (\r\n                              <>\r\n                                <TableCell>{r.conformero_2}</TableCell>\r\n                                <TableCell>{r.lim_inf_2}</TableCell>\r\n                                <TableCell>{r.lim_sup_2}</TableCell>\r\n                                <TableCell>{r.sec_similitud}</TableCell>\r\n                                <TableCell>{r.rmsd}</TableCell>\r\n                              </>\r\n                            ) : (\r\n                              <>\r\n                                <TableCell>{r.conformero_1}</TableCell>\r\n                                <TableCell>{r.lim_inf_1}</TableCell>\r\n                                <TableCell>{r.lim_sup_1}</TableCell>\r\n                                <TableCell>{r.sec_similitud}</TableCell>\r\n                                <TableCell>{r.rmsd}</TableCell>\r\n                              </>\r\n                            )}\r\n                          </TableRow>\r\n                        ))}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n                {\r\n                  <TablePagination\r\n                    rowsPerPageOptions={[\r\n                      5,\r\n                      10,\r\n                      15,\r\n                      { label: \"Todo\", value: conformaciones.length },\r\n                    ]}\r\n                    component=\"div\"\r\n                    count={conformaciones.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    SelectProps={{\r\n                      inputProps: { \"aria-label\": \"PDB por página\" },\r\n                      native: true,\r\n                    }}\r\n                    onChangePage={handleChangePage}\r\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                    ActionsComponent={TablePaginationActions}\r\n                    labelRowsPerPage=\"PDB por página\"\r\n                  />\r\n                }\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemDetail3;\r\n","import React, { Fragment } from \"react\";\r\nimport ItemDetail1 from \"../item-detail-1\";\r\nimport ItemDetail2 from \"../item-detail-2\";\r\nimport ItemDetail3 from \"../item-detail-3\";\r\n\r\nconst CardsDetail = ({ infoGeneral, infoEstructural, conformaciones }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"cards\">\r\n        <div className=\"cards__container__detail\">\r\n          <div className=\"cards__wrapper\">\r\n            <ul className=\"cards__items\">\r\n              <ItemDetail1 infoGeneral={infoGeneral} />\r\n            </ul>\r\n            <ul className=\"cards__items\">\r\n              <ItemDetail2 infoEstructural={infoEstructural} />\r\n            </ul>\r\n            <ul className=\"cards__items\">\r\n              <ItemDetail3 conformaciones={conformaciones} />\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CardsDetail;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"padre\">\r\n      <div className=\"sk-chase\">\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n        <div className=\"sk-chase-dot\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CardsDetail from \"../../components/cards-detail\";\r\nimport prsContext from \"../../context/prs/prsContext\";\r\nimport Spinner from \"../../components/spinner\";\r\n\r\nconst Detail = () => {\r\n  // Obtener el state del context\r\n  const contextPrs = useContext(prsContext);\r\n  const {\r\n    pr,\r\n    infoGeneral,\r\n    infoEstructural,\r\n    conformaciones,\r\n    loading,\r\n    getDetailInfo,\r\n  } = contextPrs;\r\n\r\n  useEffect(() => {\r\n    if (pr) getDetailInfo(pr);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const component = loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <CardsDetail\r\n      infoGeneral={infoGeneral}\r\n      infoEstructural={infoEstructural}\r\n      conformaciones={conformaciones}\r\n    />\r\n  );\r\n\r\n  return <Fragment>{pr ? component : <Redirect to=\"/\" />}</Fragment>;\r\n};\r\n\r\nexport default Detail;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst ItemEsimate1 = ({ infoGeneral }) => {\r\n  const {\r\n    pdb_id,\r\n    nombre_proteina,\r\n    titulo,\r\n    organismo,\r\n    region_repetida,\r\n    clasificacion,\r\n  } = infoGeneral;\r\n\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <div className=\"cards__item__link\">\r\n          <div className=\"cards__item__info\">\r\n            <h1 className=\"cards__item__title\">{pdb_id}</h1>\r\n            <br />\r\n            <h2 className=\"cards__item__subtitle\">Información General</h2>\r\n            <br />\r\n            <TableContainer component={Paper}>\r\n              <Table className=\"table__detail\" aria-label=\"simple data\">\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      Nombre de la proteína repetida:\r\n                    </TableCell>\r\n                    <TableCell>{nombre_proteina}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      Título:\r\n                    </TableCell>\r\n                    <TableCell>{titulo}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      Organismo\r\n                    </TableCell>\r\n                    <TableCell>{organismo}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      Región repetida:\r\n                    </TableCell>\r\n                    <TableCell>{region_repetida}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      Clasificación:\r\n                    </TableCell>\r\n                    <TableCell>{clasificacion}</TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemEsimate1;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst ItemEstimate2 = ({ infoEstructural }) => {\r\n  const { num_conformaciones, rmsd_min, rmsd_max, rmsd_avg } = infoEstructural;\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <div className=\"cards__item__link\">\r\n          <div className=\"cards__item__info\">\r\n            <h2 className=\"cards__item__subtitle\">Información Estructural</h2>\r\n            <br />\r\n            <TableContainer component={Paper}>\r\n              <Table className=\"table__detail\" arial-label=\"simple data\">\r\n                <TableBody>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      #Conformaciones:\r\n                    </TableCell>\r\n                    <TableCell>{num_conformaciones}</TableCell>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      RMSD Mínimo:\r\n                    </TableCell>\r\n                    <TableCell>{rmsd_min}</TableCell>\r\n                  </TableRow>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      RMSD Máximo:\r\n                    </TableCell>\r\n                    <TableCell>{rmsd_max}</TableCell>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      style={{ fontWeight: \"bold\" }}\r\n                    >\r\n                      RMSD Promedio:\r\n                    </TableCell>\r\n                    <TableCell>{rmsd_avg}</TableCell>\r\n                  </TableRow>\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemEstimate2;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport {\r\n  IconButton,\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ItemEstimate3 = ({ conformaciones }) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <li className=\"cards__item\">\r\n        <div className=\"cards__item__link\">\r\n          <div className=\"cards__item__info\">\r\n            <h2 className=\"cards__item__subtitle\">Conformaciones</h2>\r\n            <br />\r\n            <TableContainer component={Paper}>\r\n              <Table\r\n                className=\"table__detail\"\r\n                size=\"small\"\r\n                aria-label=\"simple data\"\r\n              >\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      className=\"table__cell\"\r\n                    >\r\n                      PDB ID\r\n                    </TableCell>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      className=\"table__cell\"\r\n                    >\r\n                      LIMITE INFERIOR\r\n                    </TableCell>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      className=\"table__cell\"\r\n                    >\r\n                      LIMITE SUPERIOR\r\n                    </TableCell>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      className=\"table__cell\"\r\n                    >\r\n                      SEC. SIMILITUD\r\n                    </TableCell>\r\n                    <TableCell\r\n                      component=\"th\"\r\n                      scope=\"row\"\r\n                      className=\"table__cell\"\r\n                    >\r\n                      RMSD\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {conformaciones\r\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                    .map((r, id) => (\r\n                      <TableRow key={id}>\r\n                        <TableCell>{r.conformero}</TableCell>\r\n                        <TableCell>{r.lim_inf}</TableCell>\r\n                        <TableCell>{r.lim_sup}</TableCell>\r\n                        <TableCell>{r.sec_similitud}</TableCell>\r\n                        <TableCell>{r.rmsd}</TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n            {\r\n              <TablePagination\r\n                rowsPerPageOptions={[\r\n                  5,\r\n                  10,\r\n                  15,\r\n                  { label: \"Todo\", value: conformaciones.length },\r\n                ]}\r\n                component=\"div\"\r\n                count={conformaciones.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"PDB por página\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n                labelRowsPerPage=\"PDB por página\"\r\n              />\r\n            }\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ItemEstimate3;\r\n","import React, { Fragment } from \"react\";\r\nimport ItemEstimate1 from \"../item-estimate-1\";\r\nimport ItemEstimate2 from \"../item-estimate-2\";\r\nimport ItemEstimate3 from \"../item-estimate-3\";\r\n\r\nconst CardsEstimate = ({ infoGeneral, infoEstructural, conformaciones }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"cards\">\r\n        <div className=\"cards__container__detail\">\r\n          <div className=\"cards__wrapper\">\r\n            <ul className=\"cards__items\">\r\n              <ItemEstimate1 infoGeneral={infoGeneral} />\r\n            </ul>\r\n            <ul className=\"cards__items\">\r\n              <ItemEstimate2 infoEstructural={infoEstructural} />\r\n            </ul>\r\n            <ul className=\"cards__items\">\r\n              <ItemEstimate3 conformaciones={conformaciones} />\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CardsEstimate;\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport prsContext from \"../../context/prs/prsContext\";\r\nimport Spinner from \"../../components/spinner\";\r\nimport CardsEstimate from \"../../components/cards-estimate\";\r\n\r\nconst Estimate = () => {\r\n  // Obtener el state del context\r\n  const contextPrs = useContext(prsContext);\r\n  const {\r\n    pr,\r\n    lower,\r\n    higher,\r\n    infoGeneral,\r\n    infoEstructural,\r\n    conformaciones,\r\n    loading,\r\n    getEstimateInfo,\r\n  } = contextPrs;\r\n\r\n  useEffect(() => {\r\n    if (pr && lower && higher) getEstimateInfo({ pr, lower, higher });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const component = loading ? (\r\n    <Spinner />\r\n  ) : (\r\n    <CardsEstimate\r\n      infoGeneral={infoGeneral}\r\n      infoEstructural={infoEstructural}\r\n      conformaciones={conformaciones}\r\n    />\r\n  );\r\n\r\n  return <Fragment>{pr ? component : <Redirect to=\"/\" />}</Fragment>;\r\n};\r\n\r\nexport default Estimate;\r\n","import React, { Fragment } from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <Fragment>\r\n      <h1>No se encuentra</h1>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport \"./index.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <section className=\"social-media\">\r\n        <div className=\"social-media-wrap\">\r\n          <small className=\"website-rights\">\r\n            Copyright © 2021. Hecho por Ronaldo Romario Tunque Cahui. Todos los\r\n            derechos reservados.\r\n          </small>\r\n          <div className=\"social-icons\">\r\n            <a\r\n              className=\"social-icon-link facebook\"\r\n              href=\"https://www.facebook.com/RonaldoTunqueC\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              aria-label=\"Facebook\"\r\n            >\r\n              <i className=\"fab fa-facebook-f\" />\r\n            </a>\r\n            <a\r\n              className=\"social-icon-link github\"\r\n              href=\"https://github.com/SfrRonaldo\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              aria-label=\"GitHub\"\r\n            >\r\n              <i className=\"fab fa-github\" />\r\n            </a>\r\n            <a\r\n              className=\"social-icon-link linkedin\"\r\n              href=\"https://www.linkedin.com/in/ronaldotunquecahui/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer\"\r\n              aria-label=\"LinkedIn\"\r\n            >\r\n              <i className=\"fab fa-linkedin\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","export const GET_PRS = \"GET_PRS\";\r\nexport const SET_DETAIL_INFO = \"SET_DETAIL_INFO\";\r\nexport const SET_ESTIMATE_INFO = \"SET_ESTIMATE_INFO\";\r\nexport const SET_CURRENT_PR = \"SET_CURRENT_PR\";\r\nexport const CLEAR_PR = \"CLEAR_PR\";\r\n","import {\r\n  GET_PRS,\r\n  SET_DETAIL_INFO,\r\n  SET_ESTIMATE_INFO,\r\n  SET_CURRENT_PR,\r\n  CLEAR_PR,\r\n} from \"../../types\";\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowArrowFunction\": true}] */\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case GET_PRS:\r\n      return { ...state, prs: action.payload };\r\n    case SET_DETAIL_INFO:\r\n      return {\r\n        ...state,\r\n        infoGeneral: action.payload.res1,\r\n        infoEstructural: action.payload.res2,\r\n        conformaciones: action.payload.res3,\r\n        loading: false,\r\n      };\r\n    case SET_ESTIMATE_INFO:\r\n      return {\r\n        ...state,\r\n        infoGeneral: action.payload.res1,\r\n        infoEstructural: action.payload.res3,\r\n        conformaciones: action.payload.res2,\r\n        loading: false,\r\n      };\r\n    case SET_CURRENT_PR:\r\n      localStorage.setItem(\"pr\", action.payload.pdbChain);\r\n      localStorage.setItem(\"lower\", action.payload.lower);\r\n      localStorage.setItem(\"higher\", action.payload.higher);\r\n      return {\r\n        ...state,\r\n        pr: action.payload.pdbChain,\r\n        lower: action.payload.lower,\r\n        higher: action.payload.higher,\r\n      };\r\n    case CLEAR_PR:\r\n      localStorage.removeItem(\"pr\");\r\n      localStorage.removeItem(\"lower\");\r\n      localStorage.removeItem(\"higher\");\r\n      return {\r\n        ...state,\r\n        pr: null,\r\n        lower: null,\r\n        higher: null,\r\n        infoGeneral: null,\r\n        infoEstructural: null,\r\n        conformaciones: null,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\r\nimport prsReducer from \"./prsReducer\";\r\nimport prsContext from \"./prsContext\";\r\nimport axios from \"axios\";\r\nimport {\r\n  GET_PRS,\r\n  SET_DETAIL_INFO,\r\n  SET_ESTIMATE_INFO,\r\n  SET_CURRENT_PR,\r\n  CLEAR_PR,\r\n} from \"../../types\";\r\n\r\nconst PrsState = (props) => {\r\n  const initialState = {\r\n    prs: [],\r\n    pr: localStorage.getItem(\"pr\"),\r\n    lower: localStorage.getItem(\"lower\"),\r\n    higher: localStorage.getItem(\"higher\"),\r\n    infoGeneral: null,\r\n    infoEstructural: null,\r\n    conformaciones: null,\r\n    loading: true,\r\n  };\r\n\r\n  // Dispatch para ejecutar las acciones\r\n  const [state, dispatch] = useReducer(prsReducer, initialState);\r\n\r\n  // Funciones\r\n  // Obtener las proteínas repetidas\r\n  const getPrs = async () => {\r\n    const result = await axios.get(\"/api/GetAll\");\r\n    dispatch({ type: GET_PRS, payload: result.data });\r\n  };\r\n\r\n  // Obtener informacion para la página Detail\r\n  const getDetailInfo = async (pr) => {\r\n    const urlInfoGeneral = `/api/GetInfoGeneral/${pr}`;\r\n    const urlInfoEstructural = `/api/GetInfoEstructural/${pr}`;\r\n    const urlConformaciones = `/api/GetConformacion/${pr}`;\r\n    const [res1, res2, res3] = await Promise.all([\r\n      axios(urlInfoGeneral),\r\n      axios(urlInfoEstructural),\r\n      axios(urlConformaciones),\r\n    ]);\r\n    setTimeout(() => {\r\n      dispatch({\r\n        type: SET_DETAIL_INFO,\r\n        payload: {\r\n          res1: res1.data.InfoGeneral[0],\r\n          res2: res2.data.InfoEstructural,\r\n          res3: res3.data.Conformacion,\r\n        },\r\n      });\r\n    }, 3000);\r\n  };\r\n\r\n  // Obtener informacion para la pagina Estimate\r\n  const getEstimateInfo = async (obj) => {\r\n    const urlInfoGeneral = `/api/EstimarInfoGeneral/${obj.pr}_${obj.lower}_${obj.higher}`;\r\n    const urlConformaciones = `/api/EstimarConformacion/${obj.pr}_${obj.lower}_${obj.higher}`;\r\n    const [res1, res2] = await Promise.all([\r\n      axios(urlInfoGeneral),\r\n      axios(urlConformaciones),\r\n    ]);\r\n    setTimeout(async () => {\r\n      const urlInfoEstructural = `/api/EstimarInfoEstructural/${obj.pr}_${obj.lower}_${obj.higher}`;\r\n      const res3 = await axios.get(urlInfoEstructural);\r\n      console.log(res3);\r\n      dispatch({\r\n        type: SET_ESTIMATE_INFO,\r\n        payload: { res1: res1.data, res2: res2.data, res3: res3.data },\r\n      });\r\n    }, 3000);\r\n  };\r\n\r\n  const setCurrentPr = (pr) => {\r\n    dispatch({ type: SET_CURRENT_PR, payload: pr });\r\n  };\r\n\r\n  // Limpiar Pr\r\n  const clearPr = () => {\r\n    dispatch({ type: CLEAR_PR });\r\n  };\r\n\r\n  // Obtener Pr de LocalStorage\r\n  const getPr = () => {\r\n    const pdbChain = localStorage.getItem(\"pr\");\r\n    const low = localStorage.getItem(\"lower\");\r\n    const high = localStorage.getItem(\"higher\");\r\n    return { pdbChain, low, high };\r\n  };\r\n\r\n  return (\r\n    <prsContext.Provider\r\n      value={{\r\n        prs: state.prs,\r\n        pr: state.pr,\r\n        lower: state.lower,\r\n        higher: state.higher,\r\n        infoGeneral: state.infoGeneral,\r\n        infoEstructural: state.infoEstructural,\r\n        conformaciones: state.conformaciones,\r\n        loading: state.loading,\r\n        getPrs,\r\n        getDetailInfo,\r\n        getEstimateInfo,\r\n        setCurrentPr,\r\n        clearPr,\r\n        getPr,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </prsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default PrsState;\r\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport ScrollToTop from \"./components/scroll-top\";\nimport Navbar from \"./components/navbar\";\nimport Home from \"./pages/home\";\nimport Tutorial from \"./pages/tutorial\";\nimport Detail from \"./pages/detail\";\nimport Estimate from \"./pages/estimate\";\nimport NotFound from \"./pages/not-found\";\nimport Footer from \"./components/footer\";\nimport PrsState from \"./context/prs/prsState\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <PrsState>\n      <Router>\n        <Navbar />\n        <ScrollToTop />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/tutorial\" component={Tutorial} />\n          <Route exact path=\"/detail\" component={Detail} />\n          <Route exact path=\"/estimate\" component={Estimate} />\n          <Route exact path=\"/404\" component={NotFound} />\n          <Redirect from=\"*\" to=\"/404\" />\n        </Switch>\n        <Footer />\n      </Router>\n    </PrsState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}